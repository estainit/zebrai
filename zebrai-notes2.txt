
run second psql (dockerized):
    docker run --name postgres-docker -e POSTGRES_USER=userzebrai -e POSTGRES_PASSWORD=passzebrai -e POSTGRES_DB=dbzebrai -p 5444:5432 -d postgres:13


Create the Virtual Environment:
    python3.11 -m venv myvenv
Activate the Virtual Environment:
    source myvenv/bin/activate
deactivate the Virtual Environment:
    deactivate

run backend server:
    uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    python3 -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload

kill all backend instances:
    pkill -f "uvicorn main:app"

install what backend needs (inside venv):
    pip install -r requirements.txt


    To run the tests, you can use the following commands:
        1. Install test dependencies: pip install -r backend/tests/requirements-test.txt
        2. Run all tests: pytest backend/tests/
        3. Run specific test types:
            - Unit tests: pytest backend/tests/unit/
            - Integration tests: pytest backend/tests/integration/
            - E2E tests: pytest backend/tests/e2e/
            - For unit tests only: pytest backend/tests/ -m unit
            - For integration tests only: pytest backend/tests/ -m integration
            - For e2e tests only: pytest backend/tests/ -m e2e

        4. Run with coverage: pytest backend/tests/ --cov=app
        5. Run with benchmarks: pytest backend/tests/ --benchmark-only

chnage password:
    curl -X POST http://localhost:8000/api/reset-password -H "Content-Type: application/json" -d '{"username": "admin", "new_password": "admin"}'


frontend:
    run with apply build memory space:
        NODE_OPTIONS="--max_old_space_size=4096" npm run build
